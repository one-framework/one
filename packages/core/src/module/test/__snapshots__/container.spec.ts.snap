// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OneContainer addModule should not add module if already exists in collection 1`] = `
Map {
  "410fc9b7dcfc3ed68796e7fb2e19327648ef8524" => OneModule {
    "container": OneContainer {
      "createdModules": Set {},
      "dynamicModulesMetadata": Map {},
      "globalModules": Set {},
      "moduleCompiler": ModuleCompiler {
        "moduleTokenFactory": ModuleTokenFactory {},
      },
      "modules": [Circular],
      "providerTokens": Set {},
    },
    "created": Promise {
      "reject": [Function],
      "resolve": [Function],
    },
    "exports": Set {},
    "factoryValues": Map {},
    "imports": Set {},
    "injector": Injector {
      "_bindingDictionary": Lookup {
        "_map": Map {
          [Function] => Array [
            Binding {
              "activated": false,
              "cache": [Circular],
              "constraint": [Function],
              "dynamicValue": null,
              "factory": null,
              "id": 1,
              "implementationType": null,
              "onActivation": null,
              "provider": null,
              "scope": "Transient",
              "serviceIdentifier": [Function],
              "type": "ConstantValue",
            },
          ],
          [Function] => Array [
            Binding {
              "activated": false,
              "cache": OneContainer {
                "createdModules": Set {},
                "dynamicModulesMetadata": Map {},
                "globalModules": Set {},
                "moduleCompiler": ModuleCompiler {
                  "moduleTokenFactory": ModuleTokenFactory {},
                },
                "modules": [Circular],
                "providerTokens": Set {},
              },
              "constraint": [Function],
              "dynamicValue": null,
              "factory": null,
              "id": 2,
              "implementationType": null,
              "onActivation": null,
              "provider": null,
              "scope": "Transient",
              "serviceIdentifier": [Function],
              "type": "ConstantValue",
            },
          ],
          Symbol(InjectionToken<Ref<Module>>) => Array [
            Binding {
              "activated": false,
              "cache": [Circular],
              "constraint": [Function],
              "dynamicValue": null,
              "factory": null,
              "id": 3,
              "implementationType": null,
              "onActivation": null,
              "provider": null,
              "scope": "Transient",
              "serviceIdentifier": Symbol(InjectionToken<Ref<Module>>),
              "type": "ConstantValue",
            },
          ],
        },
      },
      "_metadataReader": MetadataReader {},
      "_middleware": null,
      "_snapshots": Array [],
      "id": 0,
      "options": Object {
        "autoBindInjectable": false,
        "defaultScope": "Transient",
        "skipBaseClassChecks": false,
      },
      "parent": null,
    },
    "lazyInject": [Function],
    "providers": Set {},
    "scope": Array [],
    "target": [Function],
  },
}
`;
